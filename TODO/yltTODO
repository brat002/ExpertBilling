!!!!rewrite all silent try/except with DEBUG


!!! nfroutine - check connections! if there\re database errors - save data into files!
!!!nf - if database errors - save data
-- save method - if exception - put data back into queue
monitor queues - length too big - send SLP!
add try/exc to ServiceThreads
add an option - save if no DB connection - use old caches etc
add a DumperThread which would dump data and be called if connection is restored
!!!periodicalservice tp - sqlfuns
!!!refactor ebs.sql
!!!grepper - blabla
!!!cache creator based on __slots__classes
!!!nf - nfroutine workflow article
!!!rewrite cache reread on SIGHUP

#python 2.6 check named tuples????? marshalable??



write an nf generator based on classes, ports, hops, etc
get from the db info
rad packet generator
testerov na adminku
grepper
testsuite
etc
code cleanup
!rewrite nf 
  10:26:11 PM yolta_ku: locale module
  10:27:18 PM yolta_ku: gettext module
  12:03:15 AM yolta_ku: di = sorted(d.iteritems(), key=itemgetter(0))
  12:18:02 AM yolta_ku: qsettings - tempdelete file
  12:35:29 AM yolta_ku: encode report  data into hash and seek recent!
save queues and pending data in core.py if database is down

gracefully handle queues (deplete or save) in core.py on restart/shutdown
(maybe on restart drop everything?)
  9:17:29 PM yolta_ku: log thread run time
  12:55:24 AM yolta_ku: refactor code!
  12:55:52 AM yolta_ku: create cache creator!
'''
class Cacher(object):
    __slots__ = (execList, curATCache,curAT_acIdx,curAT_tfIdx, curSPCache, curTLimitCache, curSuspPerCache,
                 curNasCache,curTTSCache, curDefSpCache, curNewSpCache, curPerTarifCache, curPersSetpCache,
                 curTimeAccNCache, curTimePerNCache, curTimeAccSrvCache, )
    def __init__(self):
        pass
'''
  12:59:10 AM yolta_ku: remake report creating finctions - get data from bd in portions
store in file, calc start/end date, calc length - process
for paged reports - also! - select 2-4 pages!



TUNNEL PYRO THROUGH SSH! ?? for every client? hmmmm

Pyro.core.Daemon(host='127.0.0.1')
